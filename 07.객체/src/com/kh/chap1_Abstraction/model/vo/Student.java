package com.kh.chap1_Abstraction.model.vo;

//vo = value object 이게 몬가용? 데이터 전달 및 표현 관리, 계층간 데이터 교환, 테이블의 컬럼을 정의하고 모아둔 단위

/*클래스의 구조
 * public class 클래스명{
 *  //필드부
 *  
 *  
 *  //생성자부
 *  
 *  //메소드부
 * 
 * 
 * }
 */

//학생을 추상화 해서 만든 클래스
public class Student {
	/*
	 * 1. 객체지향언어 : "객체"를 "지향"하는 언어로 "객체 중심"으로 돌아간다고 생각하면 됨
	 * 
	 * 2. 객체란 : 사전적 의미로 현실세계에 독립적으로 존재(목적이 있고 의미가 있는)하는 것들을 의미 (무형, 유형, 사물, 개념...)
	 * 
	 * 3. 객체지향 프로그래밍 : 즉, 현실세계의 어떤 독립적인 존재들(객체) 간의 상호작용 (의미, 목적을 가진) --> 프로그래밍을 통해 가상세계(코드)로 구현하는 과정
	 *  
	 * 4. 구현하고자 하는 프로그램 상의 필요한 객체를 만들기 위해서(즉, 생성하기 위해서) : 클래스라는 틀을 먼저 만들어내야 된다. (각 객체들의 속성(정보)들을 담아낼 그릇과도 같은 존재)
	 * 														          어떻게? --> 추상화 + 캡슐화 접목해서
	 * 
	 * 5. 추상화 과정
	 *    1) 내가 구현하고자 하는 프로그램에서 필요한 객체들을 생각해 볼 것
	 *    2) 그 객체들이 가지는 공통적인 속성, 기능들을 모두 추출할 것 (100개가 됐든 200개가 됐든)
	 *    3) 그렇게 추출한 것들을 가지고 내가 구현하고자 하는 프로그램의 "실직적인 목적"에 맞춰 불필요한 속성, 기능들을 제거할 것  --> **추상화 **
	 *    4) 그렇게 최종적으로 선정된 속성들을 가지고 어떠한 자료형으로, 어떠한 변수명으로 사용할 건지 생각 
	 *    
	 *    추상화한 것을 가지고 직접 만들면 -> 인스턴스
	 *    
	 *    
	 *    ex1) 학생관련 프로그램
	 *    		1) 학생관련객체 (유산슬학생, 유야호학생, 유재석학생 ...)
	 *    		2) 공통속성 및 기능들 (이름, 나이, 주소, 전화번호, 키, 달리기속도, 학년, 반, 국어점수, 수학점수, 영어점수, 몸무게, 머리색깔, 발사이즈, 먹는다, 잔다, 응가한다, ..)
	 *    		3) 학생 "인적사항"을 관리하는 프로그램이라고 한다면 : 이름, 나이, 주소, 전화번호, 학년, 반
	 *    		       학생 "성적"을 관리하는 프로그램이라고 한다면 : 이름, 학년, 반, 국어점수, 수학점수, 영어점수
	 *    		       학생 "건강"을 관리하는 프로그램이라고 한다면 : 이름, 학년, 반, 키, 몸무게, 달리기속도, 먹는다, 응가한다
	 *    
	 *    		   학생을 관리하는 프로그램 : 이름, 나이, 키
	 *    
	 *       	4) 이렇게 3번까지의 과정을 마쳤으면 최종적으로 선정된 속성들을 어떤 자료형의 어떤 변수명으로 할건지 생각 
	 *       
	 * 		 		이름 --> String name;
	 * 			  	나이 --> int age;
	 *  		  	키    --> double height;
	 *  
	 * 6. 그럼 위에서 선정된것들을 가지고 본격적으로 프로그래밍을 할껀데...
	 * 
	 *  	1) "변수"(제일 처음배운)만으로 프로그램을 구현하게 된다면 ? 
	 *  
	 *  	   * 변수 - 하나의 자료형의 하나의 값만을 보관할 수 있음
	 *  	   
	 *         유산슬 이라는 객체를 만들어내기 위해서 --> String name1 = "유산슬"; int age1 = 20; double height1 = 162.3;
	 *         유야호 이라는 객체를 만들어내기 위해서 --> String name2 = "유야호"; int age2 = 21; double height2 = 173.4;
	 *         유재석 이라는 객체를 만들어내기 위해서 --> String name3 = "유재석"; int age3 = 32; double height3 = 182.7;
	 *          ... 등등의 객체를 다 만들어야 됨..
	 *         
	 *         어떤 문제가 발생 ? --> 수백명의 학생을 관리하는 프로그램을 구현해야 된다면 --> 수천개의 변수가 생겨날 것.. 후덜덜.. 어케 관리하징..
	 *      
	 *      2) 자 그러면 도저히 변수로 구현하면 안되겠어서 "배열"로 프로그램을 구현하게 된다면 ? 
	 *      
	 *         * 배열 - 하나의 자료형의 여러개의 값들을 보관할 순 있음
	 *         
	 *         학생들의 이름들을 보관하는 	String[] name = {"유산슬", "유야호", "유재석", ...};
	 *         학생들의 나이들을 보관하는        	    int[] age = {  20,	   21,	   32,   ...};
	 *         학생들의 키들을 보관하는	  double[] height = { 162.3,  173.4,  182.7,  ...};
	 *          
	 *         변수만을 사용했을 때 보다 그나마 괜찮아보이지만 어떤 문제가 발생 ? 
	 *         --> 한명만이라도 전학을 가게 되면 해당 학생 정보를 지워야 할 때 일일히 해당 학생의 인덱스를 찾아 name배열, age배열, height배열에 직접 지워줘야됨
	 *             혹시라도 실수해서 하나의 배열에서 값을 못지우게 되면 문제 발생!!
	 *     
	 *     3) 그래서 나온 개념이 구조체의 개념이다!!
	 *     
	 *     	  * 구조체 - 여러개의 자료형의 여러개의 값을 담을 수 있는 배열 같은 형태
	 *     
	 *     	    위의 배열들을 세로로 한 줄씩 묶는다고 생각하자 (그게 각 객체가 될 것이다.)
	 *     
	 *     	     그러면 String값도 보관하고, int값도 보관하고, double값도 같이 보관할 수 있도록 나만의 배열같은 자료형을 만들자!! 그게 바로 클래스! 
	 *     	     Student라는 클래스를 만들어서 그 안의 필드라는 걸로 String name, int age, double height를 정의 해놓을꺼임!!
	 *     	    그러면 그 각각의 필드에 해당 객체의 정보들을 담아서 생성을 하게 되면 그게 바로 객체다.
	 *       
	 */
	
	
	//필드부 (매소드에 있는걸 정의하는 느낌 이거 본적 있지?) 기능은 메소드부에서 구현하기
	//접근제한자 [예약어] 자료형 변수명;  =>접근제한자 : 접근할 수 있는 범위를 제한할 수 있다.
	//									(public전부 > protected상속 > default > private 클래스만)
	
	
	public String name;
	public int age;
	public double height;
	public int kor;
	public int math;
	
	//생성자부 

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
